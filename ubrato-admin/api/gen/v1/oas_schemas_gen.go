// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
)

func (s *ErrorsStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type CreateSessionCreated struct {
	Data OptCreateSessionCreatedData `json:"data"`
}

// GetData returns the value of Data.
func (s *CreateSessionCreated) GetData() OptCreateSessionCreatedData {
	return s.Data
}

// SetData sets the value of Data.
func (s *CreateSessionCreated) SetData(val OptCreateSessionCreatedData) {
	s.Data = val
}

type CreateSessionCreatedData struct {
	Tokens  OptTokens  `json:"tokens"`
	Session OptSession `json:"session"`
}

// GetTokens returns the value of Tokens.
func (s *CreateSessionCreatedData) GetTokens() OptTokens {
	return s.Tokens
}

// GetSession returns the value of Session.
func (s *CreateSessionCreatedData) GetSession() OptSession {
	return s.Session
}

// SetTokens sets the value of Tokens.
func (s *CreateSessionCreatedData) SetTokens(val OptTokens) {
	s.Tokens = val
}

// SetSession sets the value of Session.
func (s *CreateSessionCreatedData) SetSession(val OptSession) {
	s.Session = val
}

// CreateSessionCreatedHeaders wraps CreateSessionCreated with response headers.
type CreateSessionCreatedHeaders struct {
	SetCookie OptString
	Response  CreateSessionCreated
}

// GetSetCookie returns the value of SetCookie.
func (s *CreateSessionCreatedHeaders) GetSetCookie() OptString {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *CreateSessionCreatedHeaders) GetResponse() CreateSessionCreated {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *CreateSessionCreatedHeaders) SetSetCookie(val OptString) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *CreateSessionCreatedHeaders) SetResponse(val CreateSessionCreated) {
	s.Response = val
}

// DeleteSessionNoContent is response for DeleteSession operation.
type DeleteSessionNoContent struct{}

// Ref: #/components/schemas/Errors
type Errors struct {
	Errors []ErrorsErrorsItem `json:"errors"`
}

// GetErrors returns the value of Errors.
func (s *Errors) GetErrors() []ErrorsErrorsItem {
	return s.Errors
}

// SetErrors sets the value of Errors.
func (s *Errors) SetErrors(val []ErrorsErrorsItem) {
	s.Errors = val
}

type ErrorsErrorsItem struct {
	// An application-specific error code, expressed as a string value.
	Code string `json:"code"`
	// A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence
	// of the problem, except for purposes of localization.
	Title string `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Detail string `json:"detail"`
}

// GetCode returns the value of Code.
func (s *ErrorsErrorsItem) GetCode() string {
	return s.Code
}

// GetTitle returns the value of Title.
func (s *ErrorsErrorsItem) GetTitle() string {
	return s.Title
}

// GetDetail returns the value of Detail.
func (s *ErrorsErrorsItem) GetDetail() string {
	return s.Detail
}

// SetCode sets the value of Code.
func (s *ErrorsErrorsItem) SetCode(val string) {
	s.Code = val
}

// SetTitle sets the value of Title.
func (s *ErrorsErrorsItem) SetTitle(val string) {
	s.Title = val
}

// SetDetail sets the value of Detail.
func (s *ErrorsErrorsItem) SetDetail(val string) {
	s.Detail = val
}

// ErrorsStatusCode wraps Errors with StatusCode.
type ErrorsStatusCode struct {
	StatusCode int
	Response   Errors
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorsStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorsStatusCode) GetResponse() Errors {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorsStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorsStatusCode) SetResponse(val Errors) {
	s.Response = val
}

// NewOptCreateSessionCreatedData returns new OptCreateSessionCreatedData with value set to v.
func NewOptCreateSessionCreatedData(v CreateSessionCreatedData) OptCreateSessionCreatedData {
	return OptCreateSessionCreatedData{
		Value: v,
		Set:   true,
	}
}

// OptCreateSessionCreatedData is optional CreateSessionCreatedData.
type OptCreateSessionCreatedData struct {
	Value CreateSessionCreatedData
	Set   bool
}

// IsSet returns true if OptCreateSessionCreatedData was set.
func (o OptCreateSessionCreatedData) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateSessionCreatedData) Reset() {
	var v CreateSessionCreatedData
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateSessionCreatedData) SetTo(v CreateSessionCreatedData) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateSessionCreatedData) Get() (v CreateSessionCreatedData, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateSessionCreatedData) Or(d CreateSessionCreatedData) CreateSessionCreatedData {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSession returns new OptSession with value set to v.
func NewOptSession(v Session) OptSession {
	return OptSession{
		Value: v,
		Set:   true,
	}
}

// OptSession is optional Session.
type OptSession struct {
	Value Session
	Set   bool
}

// IsSet returns true if OptSession was set.
func (o OptSession) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSession) Reset() {
	var v Session
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSession) SetTo(v Session) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSession) Get() (v Session, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSession) Or(d Session) Session {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTokens returns new OptTokens with value set to v.
func NewOptTokens(v Tokens) OptTokens {
	return OptTokens{
		Value: v,
		Set:   true,
	}
}

// OptTokens is optional Tokens.
type OptTokens struct {
	Value Tokens
	Set   bool
}

// IsSet returns true if OptTokens was set.
func (o OptTokens) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTokens) Reset() {
	var v Tokens
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTokens) SetTo(v Tokens) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTokens) Get() (v Tokens, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTokens) Or(d Tokens) Tokens {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSessionCreatedData returns new OptUpdateSessionCreatedData with value set to v.
func NewOptUpdateSessionCreatedData(v UpdateSessionCreatedData) OptUpdateSessionCreatedData {
	return OptUpdateSessionCreatedData{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSessionCreatedData is optional UpdateSessionCreatedData.
type OptUpdateSessionCreatedData struct {
	Value UpdateSessionCreatedData
	Set   bool
}

// IsSet returns true if OptUpdateSessionCreatedData was set.
func (o OptUpdateSessionCreatedData) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSessionCreatedData) Reset() {
	var v UpdateSessionCreatedData
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSessionCreatedData) SetTo(v UpdateSessionCreatedData) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSessionCreatedData) Get() (v UpdateSessionCreatedData, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSessionCreatedData) Or(d UpdateSessionCreatedData) UpdateSessionCreatedData {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserLogin returns new OptUserLogin with value set to v.
func NewOptUserLogin(v UserLogin) OptUserLogin {
	return OptUserLogin{
		Value: v,
		Set:   true,
	}
}

// OptUserLogin is optional UserLogin.
type OptUserLogin struct {
	Value UserLogin
	Set   bool
}

// IsSet returns true if OptUserLogin was set.
func (o OptUserLogin) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserLogin) Reset() {
	var v UserLogin
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserLogin) SetTo(v UserLogin) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserLogin) Get() (v UserLogin, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserLogin) Or(d UserLogin) UserLogin {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// A set of parameters characterizing a user, agent or manager session.
// Ref: #/components/schemas/Session
type Session struct {
	// Session ID.
	ID int64 `json:"id"`
	// User ID.
	UserID int `json:"user_id"`
	// IP-address (IPv4 or IPv6).
	IP OptString `json:"ip"`
	// Time of session create in UNIX format.
	CreatedAt int64 `json:"created_at"`
	// Time of session expired in UNIX format.
	RefreshTokenExpiredAt OptInt64 `json:"refresh_token_expired_at"`
}

// GetID returns the value of ID.
func (s *Session) GetID() int64 {
	return s.ID
}

// GetUserID returns the value of UserID.
func (s *Session) GetUserID() int {
	return s.UserID
}

// GetIP returns the value of IP.
func (s *Session) GetIP() OptString {
	return s.IP
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Session) GetCreatedAt() int64 {
	return s.CreatedAt
}

// GetRefreshTokenExpiredAt returns the value of RefreshTokenExpiredAt.
func (s *Session) GetRefreshTokenExpiredAt() OptInt64 {
	return s.RefreshTokenExpiredAt
}

// SetID sets the value of ID.
func (s *Session) SetID(val int64) {
	s.ID = val
}

// SetUserID sets the value of UserID.
func (s *Session) SetUserID(val int) {
	s.UserID = val
}

// SetIP sets the value of IP.
func (s *Session) SetIP(val OptString) {
	s.IP = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Session) SetCreatedAt(val int64) {
	s.CreatedAt = val
}

// SetRefreshTokenExpiredAt sets the value of RefreshTokenExpiredAt.
func (s *Session) SetRefreshTokenExpiredAt(val OptInt64) {
	s.RefreshTokenExpiredAt = val
}

// Pair of JWT tokens used for signing outgoing HTTP requests and refreshing HTTP sessions.
// Ref: #/components/schemas/Tokens
type Tokens struct {
	// Token for authentication.
	AccessToken string `json:"access_token"`
	// Refresh token for session.
	RefreshToken string `json:"refresh_token"`
}

// GetAccessToken returns the value of AccessToken.
func (s *Tokens) GetAccessToken() string {
	return s.AccessToken
}

// GetRefreshToken returns the value of RefreshToken.
func (s *Tokens) GetRefreshToken() string {
	return s.RefreshToken
}

// SetAccessToken sets the value of AccessToken.
func (s *Tokens) SetAccessToken(val string) {
	s.AccessToken = val
}

// SetRefreshToken sets the value of RefreshToken.
func (s *Tokens) SetRefreshToken(val string) {
	s.RefreshToken = val
}

type UpdateSessionCreated struct {
	Data OptUpdateSessionCreatedData `json:"data"`
}

// GetData returns the value of Data.
func (s *UpdateSessionCreated) GetData() OptUpdateSessionCreatedData {
	return s.Data
}

// SetData sets the value of Data.
func (s *UpdateSessionCreated) SetData(val OptUpdateSessionCreatedData) {
	s.Data = val
}

type UpdateSessionCreatedData struct {
	Tokens  OptTokens  `json:"tokens"`
	Session OptSession `json:"session"`
}

// GetTokens returns the value of Tokens.
func (s *UpdateSessionCreatedData) GetTokens() OptTokens {
	return s.Tokens
}

// GetSession returns the value of Session.
func (s *UpdateSessionCreatedData) GetSession() OptSession {
	return s.Session
}

// SetTokens sets the value of Tokens.
func (s *UpdateSessionCreatedData) SetTokens(val OptTokens) {
	s.Tokens = val
}

// SetSession sets the value of Session.
func (s *UpdateSessionCreatedData) SetSession(val OptSession) {
	s.Session = val
}

// UpdateSessionCreatedHeaders wraps UpdateSessionCreated with response headers.
type UpdateSessionCreatedHeaders struct {
	SetCookie OptString
	Response  UpdateSessionCreated
}

// GetSetCookie returns the value of SetCookie.
func (s *UpdateSessionCreatedHeaders) GetSetCookie() OptString {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *UpdateSessionCreatedHeaders) GetResponse() UpdateSessionCreated {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *UpdateSessionCreatedHeaders) SetSetCookie(val OptString) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *UpdateSessionCreatedHeaders) SetResponse(val UpdateSessionCreated) {
	s.Response = val
}

// Describes a form required to create a new session initiated from user.
// Ref: #/components/schemas/UserLogin
type UserLogin struct {
	// Login or email.
	Login    string `json:"login"`
	Password string `json:"password"`
}

// GetLogin returns the value of Login.
func (s *UserLogin) GetLogin() string {
	return s.Login
}

// GetPassword returns the value of Password.
func (s *UserLogin) GetPassword() string {
	return s.Password
}

// SetLogin sets the value of Login.
func (s *UserLogin) SetLogin(val string) {
	s.Login = val
}

// SetPassword sets the value of Password.
func (s *UserLogin) SetPassword(val string) {
	s.Password = val
}
