"""Initial

Revision ID: 6124abe53c8d
Revises:
Create Date: 2025-05-18 17:21:32.401978

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6124abe53c8d"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "document_types",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=False, start=1, cycle=True),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "logs",
        sa.Column("id", sa.String(length=40), nullable=False),
        sa.Column("method", sa.String(length=6), nullable=False),
        sa.Column("url", sa.String(length=255), nullable=False),
        sa.Column("body", sa.Text(), nullable=False),
        sa.Column("code", sa.SmallInteger(), nullable=False),
        sa.Column("msg", sa.Text(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "objects_groups",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=40), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "regions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "services_groups",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=40), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.String(length=41), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("phone", sa.String(length=20), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("totp_salt", sa.String(length=16), nullable=False),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("middle_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=False),
        sa.Column("avatar", sa.String(length=255), nullable=False),
        sa.Column("verified", sa.Boolean(), nullable=False),
        sa.Column("email_verified", sa.Boolean(), nullable=False),
        sa.Column("role", sa.SmallInteger(), nullable=False),
        sa.Column("is_contractor", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("region_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["region_id"],
            ["regions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "documents",
        sa.Column("id", sa.String(length=40), nullable=False),
        sa.Column("url", sa.String(length=255), nullable=False),
        sa.Column("type", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=40), nullable=False),
        sa.ForeignKeyConstraint(
            ["type"],
            ["document_types.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "notifications",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=40), nullable=False),
        sa.Column("header", sa.String(), nullable=True),
        sa.Column("msg", sa.String(), nullable=True),
        sa.Column("href", sa.String(), nullable=True),
        sa.Column("href_text", sa.String(), nullable=True),
        sa.Column("href_color", sa.Integer(), nullable=True),
        sa.Column("read", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "objects_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=40), nullable=False),
        sa.Column("object_group_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["object_group_id"],
            ["objects_groups.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "organizations",
        sa.Column("id", sa.String(length=40), nullable=False),
        sa.Column("brand_name", sa.String(length=255), nullable=False),
        sa.Column("full_name", sa.String(length=255), nullable=False),
        sa.Column("short_name", sa.String(length=50), nullable=False),
        sa.Column("inn", sa.String(length=10), nullable=False),
        sa.Column("okpo", sa.String(length=8), nullable=False),
        sa.Column("ogrn", sa.String(length=15), nullable=False),
        sa.Column("kpp", sa.String(length=12), nullable=False),
        sa.Column("tax_code", sa.Integer(), nullable=False),
        sa.Column("address", sa.String(length=255), nullable=False),
        sa.Column("avatar", sa.String(length=255), nullable=True),
        sa.Column("email", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("phone", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("messenger", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("user_id", sa.String(length=40), nullable=False),
        sa.Column(
            "update_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "questionnaire",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("answers", sa.ARRAY(sa.Text()), nullable=False),
        sa.Column("user_id", sa.String(length=40), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "services_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=90), nullable=False),
        sa.Column("service_group_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["service_group_id"],
            ["services_groups.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "sessions",
        sa.Column("id", sa.String(length=40), nullable=False),
        sa.Column("user_id", sa.String(length=40), nullable=False),
        sa.Column("expires_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "verification_requests",
        sa.Column("id", sa.String(length=40), nullable=False),
        sa.Column("verified", sa.Boolean(), nullable=True),
        sa.Column("msg", sa.Text(), nullable=True),
        sa.Column("user_id", sa.String(length=40), nullable=False),
        sa.Column("verified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "contractor_cv",
        sa.Column("id", sa.String(length=40), nullable=False),
        sa.Column("org_id", sa.String(length=40), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("links", sa.ARRAY(sa.String()), nullable=False),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("id", "org_id"),
    )
    op.create_table(
        "contractor_locations",
        sa.Column("org_id", sa.String(length=40), nullable=False),
        sa.Column("city_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("org_id", "city_id"),
    )
    op.create_table(
        "contractor_objects",
        sa.Column("org_id", sa.String(length=40), nullable=False),
        sa.Column("object_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["object_type_id"],
            ["objects_types.id"],
        ),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("org_id", "object_type_id"),
    )
    op.create_table(
        "contractor_profile",
        sa.Column("org_id", sa.String(length=40), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("org_id"),
    )
    op.create_table(
        "contractor_services",
        sa.Column("org_id", sa.String(length=40), nullable=False),
        sa.Column("service_type_id", sa.Integer(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["service_type_id"],
            ["services_types.id"],
        ),
        sa.PrimaryKeyConstraint("org_id", "service_type_id"),
    )
    op.create_table(
        "customer_locations",
        sa.Column("org_id", sa.String(length=40), nullable=False),
        sa.Column("city_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("org_id", "city_id"),
    )
    op.create_table(
        "customer_profile",
        sa.Column("org_id", sa.String(length=40), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("org_id"),
    )
    op.create_table(
        "draft_tender",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=False, start=1, cycle=True),
            nullable=False,
        ),
        sa.Column("user_id", sa.String(length=40), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("is_contract_price", sa.Boolean(), nullable=False),
        sa.Column("is_nds_price", sa.Boolean(), nullable=False),
        sa.Column("city_id", sa.Integer(), nullable=False),
        sa.Column("floor_space", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(length=400), nullable=True),
        sa.Column("wishes", sa.String(length=400), nullable=True),
        sa.Column("specification", sa.String(length=400), nullable=True),
        sa.Column("attachments", sa.ARRAY(sa.Text()), nullable=True),
        sa.Column(
            "reception_start",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column(
            "reception_end",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column(
            "work_start",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column(
            "work_end",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column(
            "update_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tender",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=False, start=1, cycle=True),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("is_contract_price", sa.Boolean(), nullable=False),
        sa.Column("is_nds_price", sa.Boolean(), nullable=False),
        sa.Column("city_id", sa.Integer(), nullable=False),
        sa.Column("floor_space", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(length=400), nullable=False),
        sa.Column("wishes", sa.String(length=400), nullable=False),
        sa.Column("specification", sa.String(length=400), nullable=False),
        sa.Column("attachments", sa.ARRAY(sa.Text()), nullable=False),
        sa.Column(
            "reception_start",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "reception_end",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "work_start",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "work_end",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("user_id", sa.String(length=40), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("verified", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_favorite_contractor",
        sa.Column("contractor_id", sa.String(length=40), nullable=False),
        sa.Column("user_id", sa.String(length=40), nullable=False),
        sa.ForeignKeyConstraint(
            ["contractor_id"],
            ["organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("contractor_id", "user_id"),
    )
    op.create_table(
        "draft_tender_objects_types",
        sa.Column("tender_id", sa.Integer(), nullable=False),
        sa.Column("object_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["object_type_id"],
            ["objects_types.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tender_id"],
            ["draft_tender.id"],
        ),
        sa.PrimaryKeyConstraint("tender_id", "object_type_id"),
    )
    op.create_table(
        "draft_tender_services_types",
        sa.Column("tender_id", sa.Integer(), nullable=False),
        sa.Column("service_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["service_type_id"],
            ["services_types.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tender_id"],
            ["draft_tender.id"],
        ),
        sa.PrimaryKeyConstraint("tender_id", "service_type_id"),
    )
    op.create_table(
        "tender_objects_types",
        sa.Column("tender_id", sa.Integer(), nullable=False),
        sa.Column("object_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["object_type_id"],
            ["objects_types.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tender_id"],
            ["tender.id"],
        ),
        sa.PrimaryKeyConstraint("tender_id", "object_type_id"),
    )
    op.create_table(
        "tender_offers",
        sa.Column("contractor_id", sa.String(length=40), nullable=False),
        sa.Column("tender_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["contractor_id"],
            ["organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tender_id"],
            ["tender.id"],
        ),
        sa.PrimaryKeyConstraint("contractor_id", "tender_id"),
    )
    op.create_table(
        "tender_services_types",
        sa.Column("tender_id", sa.Integer(), nullable=False),
        sa.Column("service_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["service_type_id"],
            ["services_types.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tender_id"],
            ["tender.id"],
        ),
        sa.PrimaryKeyConstraint("tender_id", "service_type_id"),
    )
    op.create_table(
        "tenders_responses",
        sa.Column("tender_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(length=40), nullable=False),
        sa.Column("price", sa.Integer(), nullable=True),
        sa.Column("respond_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["tender_id"],
            ["tender.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("tender_id", "user_id"),
    )
    op.create_table(
        "user_favorite_tender",
        sa.Column("user_id", sa.String(length=40), nullable=False),
        sa.Column("tender_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tender_id"],
            ["tender.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "tender_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_favorite_tender")
    op.drop_table("tenders_responses")
    op.drop_table("tender_services_types")
    op.drop_table("tender_offers")
    op.drop_table("tender_objects_types")
    op.drop_table("draft_tender_services_types")
    op.drop_table("draft_tender_objects_types")
    op.drop_table("user_favorite_contractor")
    op.drop_table("tender")
    op.drop_table("draft_tender")
    op.drop_table("customer_profile")
    op.drop_table("customer_locations")
    op.drop_table("contractor_services")
    op.drop_table("contractor_profile")
    op.drop_table("contractor_objects")
    op.drop_table("contractor_locations")
    op.drop_table("contractor_cv")
    op.drop_table("verification_requests")
    op.drop_table("sessions")
    op.drop_table("services_types")
    op.drop_table("questionnaire")
    op.drop_table("organizations")
    op.drop_table("objects_types")
    op.drop_table("notifications")
    op.drop_table("documents")
    op.drop_table("cities")
    op.drop_table("users")
    op.drop_table("services_groups")
    op.drop_table("regions")
    op.drop_table("objects_groups")
    op.drop_table("logs")
    op.drop_table("document_types")
    # ### end Alembic commands ###
